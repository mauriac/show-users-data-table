name: GitHub Actions Manually trigger
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [workflow_dispatch]
jobs:
  Explore-GitHub-Actions:
    needs: check
    if: ${{ steps.check-changes.outputs.checksum-changed == 'true' }}
    # if: needs.check.outputs.status == 'success'
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

      - uses: mshick/add-pr-comment@v2
        with:
          message-id: ${{ github.run_id }}
          status: ${{ job.status }}
          message: |
           Test started ${{ github.job }}            
          message-success: |
           ${{ github.job }} ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} :heavy_check_mark: Test passed
          message-failure: |
           ${{ github.job }} ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} :x: Test failed
          message-cancelled: |
           ${{ github.job }} ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} :x: Test canceled
          allow-repeats: yes
    
  # update-comment:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/github-script@v6
  #       with:
  #         script: |
  #           // Get the main comment ID (replace with your logic)
  #           const mainCommentId = context.issue.comments.find(comment => comment.body.includes('Main status comment')).id;

  #           // Update the comment with workflow status
  #           github.rest.issues.updateComment({
  #             comment_id: mainCommentId,
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             body: 'Workflow status: ${{ job.status }}'
  #           });

  check:
    # outputs:
    #   status: ${{ steps.early.conclusion }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check if only checksum file has been changed
        id: check-changes
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          if [[ $CHANGED_FILES == 'checksum.txt' ]]; then
            echo "::set-output name=checksum-changed::true"
          else
            echo "::set-output name=checksum-changed::false"
          fi

      - name: Run tests
        if: ${{ steps.check-changes.outputs.checksum-changed == 'true' }}
        run: |
          # Your test commands here

